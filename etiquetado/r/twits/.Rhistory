install.packages(c("ggplot2", "rmarkdown"))
setwd('C:/Users/Vichoko/Documents/GitHub/real-time-twit/etiquetado/r/twits/')
# bind .csv's from folder to single df
temp = list.files(pattern="*.csv")
df <- data.frame()
for (i in 1:length(temp)) df <- rbind(df, read.csv(temp[i], sep=';'))
# delete duplicates
df <- unique(df)
View(df)
View(df)
df$permalink[157605]
df$retweets[73019]
df$retweets[37779]
df$username == comunicado-de-prensa-relativo-al-terremoto-en-chile
df$username == "comunicado-de-prensa-relativo-al-terremoto-en-chile"
df[df$username == "comunicado-de-prensa-relativo-al-terremoto-en-chile"]
df[df$username == "comunicado-de-prensa-relativo-al-terremoto-en-chile",]
df[df$username == "comunicado-de-prensa-relativo-al-terremoto-en-chile",]$retweets
typeof(df[df$username == "comunicado-de-prensa-relativo-al-terremoto-en-chile",]$retweets)
typeof(df[df$username == "manubaye",]$retweets)
typeof(df[df$username == "manubaye",]$date)
typeof(df[df$username == "",]$date)
typeof(df[df$username == "",])
df[df$username == "",]$date
df[df$username == "",]$date
df[df$username == "",]$date[1]
df[df$username == "",]$date[2]
typeof(df[df$username == "",]$date[2])
df[df$username == "",]$text[2]
df[df$username == "",]$date[1]
df[df$username == "",]$date[1]
df[df$username == "",]$text[2]
typeof(df[df$username == "",]$text[2])
typeof(df[df$username == "umestrangeiro",]$text[1])
1 == 1
df[df$username == "",]$text[2] == 0
df[df$username == "",]$text[2] ==
x
df[df$username == "",]$text[2] == NULL
df[df$username == "",]$text[2] == NA
length(df[df$username == "",]$text[2])
length(df[df$username == "",]$text[1])
length(df[df$username == "umestrangeiro",]$text[1])
df[df$username == "umestrangeiro",]$text[1]
df[df$username == "umestrangeiro",]$text[2]
df[df$username == "umestrangeiro",]$text[1]
df[df$username == "umestrangeiro",]$text[2]
df[df$username == "umestrangeiro",]$text[3]
df[df$username == "umestrangeiro",]$text[0]
df[df$username == "umestrangeiro",]$text[1]
df[df$username == "umestrangeiro",]$text[1] + 1
get(df[df$username == "umestrangeiro",]$text[1])
get(df[df$username == "umestrangeiro",]$text[1])
typeof($df[df$username == "umestrangeiro",]$text[1])
df[df$username == "umestrangeiro",]$text[1]
$df[df$username == "umestrangeiro",]$text[1]
get(df[df$username == "umestrangeiro",]$text[1])
help(get)
mget(df[df$username == "umestrangeiro",]$text[1])
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){
if (df$retweets[i] == "" || df$favorites[i] == "" || df$username == "" ){
vect = c(vect, FALSE)
} else {
vect = c(vect, TRUE)
}
}
newdf = df[vect,]
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){}
if (df$retweets[i] == "") vect = c(vect, FALSE)
else if (df$favorites[i] == "") vect = c(vect, FALSE)
else if (df$username == "" ) vect = c(vect, FALSE)
else if (df$text == "") vect = c(vect, FALSE)
else if (df$permalink == "") vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
vect = c()
for (i in 1:length(df$permalink)){
if (df$retweets[i] == "") vect = c(vect, FALSE)
else if (df$favorites[i] == "") vect = c(vect, FALSE)
else if (df$username == "" ) vect = c(vect, FALSE)
else if (df$text == "") vect = c(vect, FALSE)
else if (df$permalink == "") vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){
if (df$retweets[i] == "") vect = c(vect, FALSE)
else if (df$favorites[i] == "") vect = c(vect, FALSE)
else if (df$username[i] == "" ) vect = c(vect, FALSE)
else if (df$text[i] == "") vect = c(vect, FALSE)
else if (df$permalink[i] == "") vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
df[df$username == "umestrangeiro",]$retweets
typeof(df[df$username == "umestrangeiro",]$retweets)
df[df$username == "umestrangeiro",]$retweets[0]
df[df$username == "umestrangeiro",]$retweets[1]
df[df$username == "IGecuador",]$retweets[1]
df[df$username == "IGecuador",]$retweets[0]
df[df$username == "IGecuador",]$retweets[2]
df[df$username == "IGecuador",]$retweets[3]
df[df$username == "https://twitter.com/Yamcha_sn/status/644490443787517952",]$retweets[0]
df[df$username == "https://twitter.com/Yamcha_sn/status/644490443787517952",]$retweets[1]
df[df$username == "https://twitter.com/Yamcha_sn/status/644490443787517952",]$retweets[1] == ""
df[df$username == "https://twitter.com/Yamcha_sn/status/644490443787517952",]$retweets[1] == "0"
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){
if (df$retweets[i] == "") vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){
print(df$retweets[i])
if (df$retweets[i] == "") vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
is.na(NA)
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){
if (is.na(df$retweets[i]) || df$retweets[i] == "") vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
newdf = df[vect,]
View(newdf)
View(newdf)
df[df$username == "gt",]$retweets[1]
is.numeric(df[df$username == "gt",]$retweets[1])
is.numeric(df[df$username == "letozaf",]$retweets[1])
is.numeric(df[df$username == "letozaf",]$retweets[0])
is.numeric(df[df$username == "letozaf",]$retweets[3])
!is.na(as.numeric(df[df$username == "letozaf",]$retweets[0]))
!is.na(as.numeric(df[df$username == "letozaf",]$retweets[0]))[1]
!is.na(as.numeric(df[df$username == "letozaf",]$retweets[0]))
as.numeric(df[df$username == "letozaf",]$retweets[0])
as.numeric(df[df$username == "letozaf",]$retweets[0])[1]
df[df$username == "letozaf",]$retweets[0]
df[df$username == "letozaf",]$retweets[1]
!is.na(as.numeric(df[df$username == "letozaf",]$retweets[1]))
!is.na(as.numeric(df[df$username == "gt",]$retweets[1]))
# clean dirty records
vect = c()
for (i in 1:length(df$permalink)){
if (is.na(df$retweets[i]) || df$retweets[i] == "") vect = c(vect, FALSE)
else if (is.na(df$favorites[i]) || df$favorites[i] == "") vect = c(vect, FALSE)
else if (is.na(df$text[i]) || df$text[i] == "") vect = c(vect, FALSE)
else if (is.na(as.numeric(df$retweets[i]))) vect = c(vect, FALSE)
else vect = c(vect, TRUE)
}
newdf = df[vect,]
View(newdf)
View(newdf)
as.integer(t(as.data.frame(strsplit(toString(newdf$date[1]),' '))))
newdf$date[1]
toString(newdf$date[1])
(strsplit(toString(newdf$date[1]),' '))
(strsplit(toString(newdf$date[1]),' '))[1]
(strsplit(toString(newdf$date[1]),' '))[2]
(strsplit(toString(newdf$date[1]),' '))[0]
(t(as.data.frame(strsplit(toString(newdf$date[i]),' '))))
(t(as.data.frame(strsplit(toString(newdf$date[i]),' '))))
(as.data.frame(strsplit(toString(newdf$date[i]),' ')))
(t(as.data.frame(strsplit(toString(newdf$date[1]),' '))))
(t(as.data.frame(strsplit(toString(newdf$date[1]),' '))))[1]
as.integer(t(as.data.frame(strsplit(toString(newdf$date[1]),' ')))[1])
as.integer(t(as.data.frame(strsplit(toString(newdf$date[1]),' '))))[1]
as.integer(t(as.data.frame(strsplit(toString(newdf$date[1]),' '))))
as.integer(t(as.data.frame(strsplit(toString(newdf$date[1]),' '))))
(t(as.data.frame(strsplit(toString(newdf$date[1]),' ')))[1]
a
(t(as.data.frame(strsplit(toString(newdf$date[1]),' ')))[1])
# create new column with only date
newdf['odate'] = NA
for (i in 1:length(newdf$date)){# x cada tupla
sismos$odate[i] = (t(as.data.frame(strsplit(toString(newdf$date[i]),' ')))[1])
}
# create new column with only date
newdf['odate'] = NA
for (i in 1:length(newdf$date)){# x cada tupla
newdf$odate[i] = (t(as.data.frame(strsplit(toString(newdf$date[i]),' ')))[1])
}
View(newdf)
View(newdf)
hist(newdf$date, main="Histograma de Twits en torno al terremoto del 16-09-2015", xlab="Dias")
help("hist")
# create new column with only date
newdf['day'] = NA
for (i in 1:length(newdf$date)){# x cada tupla
newdf$day[i] = as.integer(t(as.data.frame(strsplit( (t(as.data.frame(strsplit(toString(newdf$date[i]),' ')))[1]), '-')))[1])
}
hist(newdf$day, main="Histograma de Twits en torno al terremoto del 16-09-2015", xlab="Dias")
# create new column with only date
newdf['day'] = NA
for (i in 1:length(newdf$date)){# x cada tupla
newdf$day[i] = as.integer(t(as.data.frame(strsplit( (t(as.data.frame(strsplit(toString(newdf$date[i]),' ')))[1]), '-')))[3])
}
hist(newdf$day, main="Histograma de Twits en torno al terremoto del 16-09-2015", xlab="Dias")
hist(newdf$day, main="Histograma de Twits en torno al terremoto del 16-09-2015", xlab="Dias", breaks = 9)
## Cloud of words
library(tm)
library(SnowballC)
library(wordcloud)
## Cloud of words
Needed <- c("tm", "SnowballC","wordcloud")
install.packages(Needed, dependencies=TRUE)
library(tm)
Needed <- c("tm", "SnowballC","wordcloud", "NLP")
install.packages(Needed, dependencies=TRUE)
Needed <- c("NLP")
install.packages(Needed, dependencies=TRUE)
install.packages(Needed, dependencies=TRUE)
library(tm)
library(SnowballC)
library(wordcloud)
twtCorpus <- Corpus(VectorSource(newdf$text))
twtCorpus <- tm_map(twtCorpus, PlainTextDocument)
twtCorpus <- tm_map(twtCorpus, removePunctuation)
twtCorpus <- tm_map(twtCorpus, removeWords, stopwords('spanish'))
twtCorpus <- tm_map(twtCorpus, stemDocument)
wordcloud(twtCorpus, max.words = 100, random.order = FALSE)
## Make a cloud before the earthquake and after
# before
twtCorpus_b <- Corpus(VectorSource(newdf[newdf$day < 16]$text))
twtCorpus_b <- tm_map(twtCorpus_b, PlainTextDocument)
twtCorpus_b <- tm_map(twtCorpus_b, removePunctuation)
twtCorpus_b <- tm_map(twtCorpus_b, removeWords, stopwords('spanish'))
twtCorpus_b <- tm_map(twtCorpus_b, stemDocument)
wordcloud(twtCorpus_b, max.words = 100, random.order = FALSE)
twtCorpus_b
twtCorpus_b <- Corpus(VectorSource(newdf[newdf$day < 16]$text))
twtCorpus_b <- Corpus(VectorSource(newdf[newdf$day < 16,]$text))
twtCorpus_b <- tm_map(twtCorpus_b, PlainTextDocument)
twtCorpus_b <- tm_map(twtCorpus_b, removePunctuation)
twtCorpus_b <- tm_map(twtCorpus_b, removeWords, stopwords('spanish'))
twtCorpus_b <- tm_map(twtCorpus_b, stemDocument)
wordcloud(twtCorpus_b, max.words = 100, random.order = FALSE)
twtCorpus_b <- Corpus(VectorSource(newdf[newdf$day < 16,]$text))
twtCorpus_b <- tm_map(twtCorpus_b, PlainTextDocument)
twtCorpus_b <- tm_map(twtCorpus_b, removePunctuation)
twtCorpus_b <- tm_map(twtCorpus_b, removeWords, query_words, stopwords('spanish'))
query_words = c('http', 'terremoto', 'sismo', 'temblor',
'temblar', 'temblando', 'temblo', 'tembló', 'sismo')
## Make a cloud before the earthquake and after
# before
twtCorpus_b <- Corpus(VectorSource(newdf[newdf$day < 16,]$text))
twtCorpus_b <- tm_map(twtCorpus_b, PlainTextDocument)
twtCorpus_b <- tm_map(twtCorpus_b, removePunctuation)
twtCorpus_b <- tm_map(twtCorpus_b, removeWords, stopwords('spanish'))
twtCorpus_b <- tm_map(twtCorpus_b, removeWords, query_words)
twtCorpus_b <- tm_map(twtCorpus_b, stemDocument)
wordcloud(twtCorpus_b, max.words = 100, random.order = FALSE)
query_words = c('http', 'terremoto', 'sismo', 'temblor',
'temblar', 'temblando', 'temblo', 'tembló', 'sismo', 'httpwww')
# Make a cloud before the earthquake and after
twtCorpus_a <- Corpus(VectorSource(newdf[newdf$day >= 16,]$text))
twtCorpus_a <- tm_map(twtCorpus_a, PlainTextDocument)
twtCorpus_a <- tm_map(twtCorpus_a, removePunctuation)
twtCorpus_a <- tm_map(twtCorpus_a, removeWords, query_words, stopwords('spanish'))
twtCorpus_a <- tm_map(twtCorpus_a, removeWords, stopwords('spanish'))
twtCorpus_a <- tm_map(twtCorpus_a, removeWords, query_words)
twtCorpus_a <- tm_map(twtCorpus_a, stemDocument)
wordcloud(twtCorpus_a, max.words = 100, random.order = FALSE)
